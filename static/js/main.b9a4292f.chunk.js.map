{"version":3,"sources":["app/routes/authorization.tsx","app/components/pages/dashboard/dashboardScreen.tsx","app/helpers/fetch.tsx","app/types/index.tsx","app/actions/ui.tsx","app/actions/drivers.tsx","app/components/ui/loading.tsx","app/helpers/modal.tsx","app/hooks/useForm.tsx","app/components/pages/drivers/modal.tsx","app/components/pages/drivers/list.tsx","app/components/pages/drivers/index.tsx","app/actions/students.tsx","app/actions/pdf.tsx","app/components/ui/reporte.tsx","app/components/pages/students/list.tsx","app/components/pages/students/index.tsx","app/components/pages/students/student.tsx","app/routes/dashboard/students.tsx","app/actions/errors.tsx","app/actions/horarios.tsx","app/actions/auth.tsx","app/components/ui/navbar.tsx","app/components/pages/horarios/HoraioScreen.tsx","app/routes/dashboard/dashboard.tsx","app/components/auth/loginScreen.tsx","app/routes/index.tsx","app/reducers/authReducer.tsx","app/reducers/errorReducer.tsx","app/reducers/uiReducer.tsx","app/reducers/studentsReducer.tsx","app/reducers/pdfReducer.tsx","app/reducers/driverReducer.tsx","app/reducers/afluenciaReducer.tsx","app/store/index.tsx","app/app.tsx","index.tsx"],"names":["PrivateRouter","isAuth","Component","rest","component","to","PublicRouter","DashboardScreen","className","endPoint","process","fetchWithoutToken","url","method","data","fetch","headers","body","JSON","stringify","fetchWithToken","token","String","localStorage","getItem","types","login","logout","checking","startLoading","stopLoading","setError","delError","loadStudents","setActiveStudent","clearStudents","setPDF","clearPDF","loadDrivers","setActiveDriver","clearDrivers","openModalDrivers","clseModalDrivers","clearActiveDriver","updateDriver","addDriver","deleteDriver","getAfluenciaStudent","clearAfluenciaStudent","type","drivers","payload","activeDriverModal","closeDriverModal","driver","update","Loading","color","height","width","customStylespdf","content","top","left","right","bottom","marginRight","transform","margin","padding","customStyles","useForm","init","useState","values","setValues","onChangeInput","event","target","checked","value","name","val","prevState","reset","ModalCRUD","dispatch","useDispatch","useSelector","info","active","openModal","nombre_conductor","apellido_conductor","cedula_conductor","celular_conductor","email_conductor","numerorecorridomaximo","state_conductor","activeId","useRef","useEffect","current","closeModal","isOpen","Boolean","ariaHideApp","onRequestClose","style","onSubmit","e","preventDefault","callback","a","resp","json","dataResp","Swal","fire","icon","title","text","message","htmlFor","id","onChange","disabled","maxLength","minLength","min","onClick","ListDrivers","handleEditDriver","map","cursor","Drivers","loading","ui","respJson","conductoresAll","students","startingSetPdf","urlString","setPdf","clearPdf","ModalPDF","refdiv","pdf","onAfterOpen","input","PDFObject","embed","contentLabel","ref","ListStudents","student","handlePrint","doc","jsPDF","setProperties","align","autoTable","head","nombre_estudiante","apellido_estudiante","cedula_estudiante","semestre","nombre","ciudad","facultade","output","handleSearch","textDecoration","Students","estudianteAll","Student","comentarios","horarios","console","log","celular_estudiante","email_estudiante","modalidad","length","comentario","key","gradosatisfacion","scope","hora","nombredia","horaentrata","horasalida","useRouteMatch","path","exact","msg","err","getHorarios","uid","startLogout","clear","finishCheking","Nav","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Afluencia","date","moment","hour","minute","second","horaentrada","format","horadalida","showTimeStart","setShowTimeStart","showTimeEnd","setShowTimeEnd","setHoraEntrada","setHoraSalida","handleInputChange","horariosAll","dia","time","newTime","formatted24","hour24Mode","DashboardRoutes","Horarios","email","password","LoginScreen","setItem","decode","placeholder","Routes","auth","check","undefined","authReducer","state","action","errorReducer","uiReducer","studentReducer","pdfReducer","driverReducer","filter","afluenciaReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","Store","createStore","applyMiddleware","thunk","App","store","root","document","getElementById","render"],"mappings":"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","file":"static/js/main.b9a4292f.chunk.js","sourcesContent":["import React from 'react';\nimport { Route,Redirect } from 'react-router-dom';\nimport { i_types_routes } from '../intefaces/routesInterface';\n\nexport const PrivateRouter = ({isAuth,Component,...rest}:i_types_routes) => <Route\n    { ...rest }\n    component={ () => isAuth ? Component() : <Redirect to='/login'/> }\n/>\n\n\nexport const PublicRouter = ({isAuth,Component,...rest}:i_types_routes) => <Route\n    {...rest}\n    component={ () => isAuth ? <Redirect to='/'/> : Component() }\n/>","import React from 'react'\n\n\nconst DashboardScreen = () => {\n    return <>\n    <hr className=\"my-3\" />\n    <h1 className=\"display-2 text-center\"> Bienvenido Administrador </h1>\n    \n    </>\n}\n\nexport default DashboardScreen;","import { i_fetch } from \"../intefaces/fetchInterface\";\n\nconst endPoint = process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = ({ url,method = 'GET',data }:i_fetch):Promise<any> => {\n    if( method === 'GET'){\n        return fetch(`${ endPoint }${ url }`)\n    }else{\n        return fetch(`${ endPoint }${ url }`, {\n            method,\n            headers: { 'Content-type' : 'application/json' },\n            body: JSON.stringify( data )\n        })\n    }\n}\n\n\nexport const fetchWithToken = ({ url,method = 'GET',data }:i_fetch): Promise<any> => {\n    const token = String(localStorage.getItem('token'));\n\n    if( method === 'GET'){\n        return fetch(`${ endPoint }${ url }`,{\n            headers: { \n                'Content-type' : 'application/json',\n                'token': token\n            }\n        })\n    }else {\n        return fetch(`${ endPoint }${ url }`, {\n            method,\n            headers: { \n                'Content-type' : 'application/json',\n                'token': token\n            },\n            body: JSON.stringify( data )\n        })\n    }\n}","const types = {\n    login: '[Auth] login',\n    logout: '[Auth] logout',\n    checking: '[Auth] Checking Token',\n    startLoading: '[UI] Start loading',\n    stopLoading: '[UI] Stop loading',\n    setError: '[Err] Set Error',\n    delError: '[Err] Del Error',\n    loadStudents: '[Student] Load Students',\n    setActiveStudent: '[Student] Active student',\n    clearStudents: '[Student] Clear student',\n    setPDF: '[PDF] Set Pdf',\n    clearPDF: '[PDF] Clear Pdf',\n    loadDrivers: '[Driver] load drivers',\n    setActiveDriver: '[Driver] Active driver',\n    clearDrivers: '[Driver] Clear driver',\n    openModalDrivers: '[Driver] Open modal',\n    clseModalDrivers: '[Driver] Close modal',\n    clearActiveDriver: '[Driver] Clear active driver',\n    updateDriver: '[Driver] Update driver',\n    addDriver: '[Driver] Add driver',\n    deleteDriver: '[Driver] delete driver',\n    getAfluenciaStudent: '[Afluencia] afluencia student',\n    clearAfluenciaStudent: '[Afluencia] clear afluencia student'\n}\n\nexport default types;","import types from '../types';\nimport { i_ui_action as i_action } from '../intefaces/uiInterface';\n\nexport const startLoading = ():i_action => {\n    const { startLoading:type } = types;\n    return {\n        type\n    }\n}\n\nexport const stopLoading = () => {\n    const { stopLoading:type } = types;\n    return {\n        type\n    }\n}","import { fetchWithToken } from \"../helpers/fetch\";\nimport { i_driver, i_driver_action as i_action } from \"../intefaces/driverInterface\";\nimport types from \"../types\";\nimport { stopLoading } from \"./ui\";\nimport Swal from 'sweetalert2';\n\n\n\nexport const startLoadDrivers = () => async ( callback:Function ) => {\n    const resp = await fetchWithToken({url:'/conductor'});\n    const respJson = await resp.json();\n    const drivers = respJson.conductoresAll;\n\n    callback( loadDrivers( drivers ));\n    callback( stopLoading() );\n}\n\nexport const loadDrivers = ( drivers:Array<i_driver>):i_action => {\n    const { loadDrivers:type } = types;\n    return {\n        type,\n        payload: {\n            drivers\n        }\n    }\n} \n\n\nexport const setActiveDriver = ( driver:i_driver ):i_action => {\n    const { setActiveDriver:type } = types;\n\n    return {\n        type,\n        payload: {\n            active: driver\n        }\n    }\n}\n\nexport const activeDriverModal = ():i_action => {\n    const { openModalDrivers:type } = types;\n    return { type }\n}\n\nexport const closeDriverModal = ():i_action => {\n    const { clseModalDrivers:type } = types;\n    return { type }\n}\n\nexport const clearActiveDriver = ():i_action => {\n    const { clearActiveDriver:type } = types;\n    return { type }\n}\n\n\nexport const clearDriver = ():i_action => {\n    const { clearDrivers:type } = types;\n    return { type }\n}\n\n\nexport const startAddDriver = (driver:i_driver) => async (callback:Function) => {\n     /*\n        poner la ruta del backend para agregar el driver\n\n        const resp = await fetchWithToken({url: `/ruta`,method: 'POST',data:driver});\n        const dataResp = await resp.json();\n    */\n   \n        Swal.fire({\n            icon: 'success',\n            title: 'Actividad completada',\n            // text: dataResp.message\n        });\n    // callback( addDriver );\n    callback( closeDriverModal() );\n}\n\nexport const addDriver = (driver:i_driver):i_action => {\n    const { addDriver:type } = types;\n    return {\n        type,\n        payload: {\n            update: driver\n        }\n    }\n}\n\n\nexport const startUpdateDriver =  (driver:i_driver) => async (callback:Function) => {\n    const resp = await fetchWithToken({url: `/conductor/${driver.cedula_conductor}`,method: 'PUT',data:driver});\n    const dataResp = await resp.json();\n\n    Swal.fire({\n        icon: 'success',\n        title: 'Actividad completada',\n        text: dataResp.message\n    })\n\n    callback(updateDriver(driver))\n    callback( closeDriverModal() );\n    callback( clearActiveDriver() );\n}\n\n\nexport const updateDriver = (driver:i_driver):i_action => {\n    const { updateDriver:type } = types;\n    return { \n        type,\n        payload: {\n            update: driver\n        }\n    }\n}\n\n\nexport const startDeleteDriver = (driver:i_driver) => async ( callback:Function ) => {\n\n    /*\n        poner la ruta del backend para eliminar el driver\n\n        const resp = await fetchWithToken({url: `/ruta/{driver.cedula_conductor}`,method: 'DELETE',data:driver});\n        const dataResp = await resp.json();\n    */\n   \n    Swal.fire({\n        icon: 'success',\n        title: 'Actividad completada',\n        // text: dataResp.message\n    });\n    // callback( deleteDriver(driver) );\n} \n\n\nconst deleteDriver = (driver:i_driver):i_action => {\n    const { deleteDriver:type } = types;\n    return { \n        type,\n        payload: {\n            update: driver\n        }\n    }\n}","import React from 'react';\nimport ReactLoading, { LoadingProps } from 'react-loading';\n\n\nconst Loading = ({ type, color }:LoadingProps) => (\n    <ReactLoading type={type} color={color} height={'50px'} width={'50px'} />\n)\n\n \nexport default Loading;","export const customStylespdf = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)',\n        margin: '0',\n        padding: '0'\n    }\n};\n\n\n\nexport const customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};","import { ChangeEvent, useState } from 'react';\n\nconst useForm = ( init = {} ):Array<any> => {\n    \n\n    const [ values, setValues ] = useState( init );\n\n    const onChangeInput = (event:ChangeEvent) => {\n        let { type,checked,value,name } = event.target as HTMLInputElement;\n        const val = type && type === 'checkbox' ? checked : value;\n    \n        setValues((prevState) => {\n            return {\n                ...prevState,\n                [name]: val\n            }\n        });\n      }\n    const reset = () => setValues(init)\n\n    return [\n        values,\n        onChangeInput,\n        reset\n    ]\n}\n\nexport default useForm;","import React, { useEffect, useRef } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearActiveDriver, closeDriverModal, startAddDriver, startUpdateDriver } from '../../../actions/drivers';\nimport { customStyles } from '../../../helpers/modal';\nimport useForm from '../../../hooks/useForm';\nimport { i_driver } from '../../../intefaces/driverInterface';\nimport i_redux from '../../../intefaces/reduxInterface';\n\n\n\nconst ModalCRUD = () => {\n\n    const dispatch = useDispatch();\n\n    const { active,openModal } = useSelector((info:i_redux) => info.drivers);\n\n    let init:i_driver = {\n        nombre_conductor: '',\n        apellido_conductor:'',\n        cedula_conductor:'',\n        celular_conductor:'',\n        email_conductor:'',\n        numerorecorridomaximo: 0,\n        state_conductor: false\n    }\n\n    if( active ){\n        init = active;\n    }\n\n    const [ values, onChangeInput,reset ] = useForm(init);\n\n\n    const activeId = useRef( active );\n\n    useEffect(() => {\n        if( active !== activeId.current ){\n            reset( active )\n            activeId.current = active\n        }\n    },[active,reset])\n    \n\n    const { \n        nombre_conductor,\n        apellido_conductor,\n        cedula_conductor,\n        celular_conductor,\n        email_conductor,\n        numerorecorridomaximo,\n        state_conductor\n    }:i_driver = values;\n\n\n    const closeModal = () => {\n        dispatch( closeDriverModal() );\n        dispatch( clearActiveDriver() );\n    }\n\n\n    const handleSubmit =  (e:Event) => {\n        e.preventDefault();\n        if( active ) {\n            return dispatch( startUpdateDriver(values) );\n        } else {\n            return dispatch( startAddDriver(values) );\n        }\n    }\n\n    return <>\n        <Modal\n            isOpen={ Boolean(openModal) }\n            ariaHideApp={ false }\n            onRequestClose={closeModal}\n            style={customStyles}\n        >\n            <form onSubmit={ handleSubmit as any}>\n                <div className='mb-3'>\n                    <label htmlFor=\"nombreid\" className='form-label'>Nombre</label>\n                    <input\n                        id='nombreid' \n                        type=\"text\"\n                        className='form-control'\n                        name='nombre_conductor'\n                        value={ nombre_conductor }\n                        onChange={ onChangeInput }\n                        disabled={ !!active }\n                    />\n                </div>\n                <div className='mb-3'>\n                    <label htmlFor=\"apellidoid\" className='form-label'>Apellido</label>\n                    <input\n                        id='apellidoid' \n                        type=\"text\"\n                        className='form-control'\n                        name='apellido_conductor'\n                        value={ apellido_conductor }\n                        onChange={ onChangeInput }\n                        disabled={ !!active }\n                    />\n                </div>\n                <div className='mb-3'>\n                    <label htmlFor=\"cedulaid\" className='form-label'>Cedula</label>\n                    <input\n                        id='cedulaid' \n                        type=\"text\"\n                        className='form-control'\n                        name='cedula_conductor'\n                        value={ cedula_conductor }\n                        onChange={ onChangeInput }\n                        disabled={ !!active }\n                        maxLength={ 10 }\n                        minLength={ 0 }\n                    />\n                </div>\n                <div className='mb-3'>\n                    <label htmlFor=\"correoid\" className='form-label'> Correo</label>\n                    <input\n                        id='correoid' \n                        type=\"email\"\n                        className='form-control'\n                        name='email_conductor'\n                        value={ email_conductor }\n                        onChange={ onChangeInput }\n                        disabled={ !!active }\n                    />\n                </div>\n                <div className='mb-3'>\n                    <label htmlFor=\"telefonoid\" className='form-label'>Telefono</label>\n                    <input\n                        id='telefonoid' \n                        type=\"telf\"\n                        className='form-control'\n                        name='celular_conductor'\n                        value={ celular_conductor }\n                        onChange={ onChangeInput }\n                        disabled={ !!active }\n                        maxLength={ 10 }\n                        minLength={ 0 }\n                    />\n                </div>\n                <div className='mb-3'>\n                    <label>\n                        Estado:\n                        <input\n                            name=\"state_conductor\"\n                            type=\"checkbox\"\n                            checked={ state_conductor }\n                            onChange={ onChangeInput } \n                        />\n                    </label>\n                </div>\n                <div className='mb-3'>\n                    <label htmlFor=\"recorridosid\" className='form-label'>max recorrido</label>\n                    <input\n                        id='recorridosid' \n                        type=\"number\"\n                        className='form-control'\n                        name='numerorecorridomaximo'\n                        value={ numerorecorridomaximo }\n                        onChange={ onChangeInput }\n                        min={ 0 }\n                    />\n                </div>\n\n                <button type=\"submit\" className='btn btn-success mb-3' style={{width:'100%'}}>Enviar</button>\n                <button type=\"button\" className='btn btn-danger' onClick={ closeModal } style={{width:'100%'}}>Cancelar</button>\n            </form>\n        </Modal>\n    </>\n}\n\nexport default ModalCRUD;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeDriverModal, setActiveDriver, startDeleteDriver } from '../../../actions/drivers';\nimport { i_driver } from '../../../intefaces/driverInterface';\nimport i_redux from '../../../intefaces/reduxInterface';\nimport ModalCRUD from './modal';\n\nconst ListDrivers = () => {\n\n    const dispatch = useDispatch();\n\n    const { drivers } = useSelector((info:i_redux) => info.drivers);\n\n    const handleEditDriver = (driver:i_driver) => {\n        dispatch( setActiveDriver(driver) );\n        dispatch( activeDriverModal() );\n    }\n\n    const handleAdd = () =>  dispatch( activeDriverModal() );\n    \n    const handleDeleteDriver = (driver:i_driver) => dispatch( startDeleteDriver(driver) );\n    return <>\n     {/*    <button type=\"button\" onClick={ handleAdd }> Agregar </button> */}\n        <table className='table table-striped table-hover'>\n            <thead>\n                <tr>\n                    <th>Nombre</th>\n                    <th>Apellido</th>\n                    <th>Cedula</th>\n                    <th>Correo</th>\n                    <th>Telefono</th>\n                    <th>Estado</th>\n                    <th>Recorridos</th>\n                    <th>Opciones</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    drivers?.map((driver:i_driver) => <tr key={driver.cedula_conductor}>\n                        <td>{driver.nombre_conductor}</td>\n                        <td>{driver.apellido_conductor}</td>\n                        <td>{driver.cedula_conductor}</td>\n                        <td>{driver.email_conductor}</td>\n                        <td>{driver.celular_conductor}</td>\n                        <td>{driver.state_conductor ? 'activo' : 'inactivo'}</td>\n                        <td>{driver.numerorecorridomaximo}</td>\n                        <td>\n                            <i style={{ cursor: 'pointer', margin: '0 6px '}} onClick={ () => handleEditDriver(driver) } className='fa fa-edit'></i>\n                          {/*   <i style={{ cursor: 'pointer', margin: '0 6px '}} onClick={ () => handleDeleteDriver(driver) } className='fa fa-trash'></i> */}\n                        </td>\n                    </tr>)\n                }\n            </tbody>\n        </table>\n        \n        <ModalCRUD/>\n    </>\n}\n\n\nexport default ListDrivers;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoadDrivers } from '../../../actions/drivers';\nimport { startLoading } from '../../../actions/ui';\nimport i_redux from '../../../intefaces/reduxInterface';\nimport Loading from '../../ui/loading';\nimport ListDrivers from './list';\n\nconst Drivers = () => {\n    const dispatch = useDispatch();\n    const { loading } = useSelector((info:i_redux) => info.ui);\n\n    useEffect(() => {\n        dispatch( startLoadDrivers() )\n        dispatch( startLoading() );\n    },[ dispatch ])\n\n    return <>\n        {\n            loading \n            ?  <Loading type='spin' color='#48f542'/>\n            : <div>\n                <h3 className=\"text-center\">Lista de Conductores</h3>\n                <hr className=\"my-3\" />\n                <ListDrivers />\n                \n            </div>\n        }\n    </>\n}\n\n\nexport default Drivers;","import types from '../types';\nimport { i_student_action as i_action,i_student } from '../intefaces/studentInterface';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { stopLoading } from './ui';\n\n\nexport const startLoadingStudents = ():Function => {\n    return async ( callback:Function ) => {\n        const resp = await fetchWithToken({url:'/estudiante'})\n        const json = await resp.json();\n\n        callback( loadStudents(json.estudianteAll) );\n        callback( stopLoading() );\n    }\n}\n\nexport const loadStudents = ( students:Array<i_student>):i_action => {\n    const { loadStudents } = types;\n    return {\n        type: loadStudents,\n        payload: {\n            students\n        }\n    }\n}\n\nexport const setActiveStudent = (active:i_student):i_action => {\n    const { setActiveStudent } = types;\n\n    return {\n        type: setActiveStudent,\n        payload: {\n            active\n        }\n    }\n}\n\n\nexport const clearStudents = () => {\n    const { clearStudents:type } = types;\n\n    return { type }\n}","import { i_pdf_action as i_action } from \"../intefaces/pdfInterface\";\nimport types from \"../types\";\n\nexport const startingSetPdf = ( urlString:string ) => async ( callback:Function ) =>{\n    callback( setPdf(urlString) );\n}\n\nexport const setPdf = ( urlString:string ):i_action => {\n    const { setPDF } = types;\n\n    return {\n        type: setPDF,\n        payload: {\n            urlString,\n            openModal: true\n        }\n    }\n}\n\nexport const clearPdf  = () => {\n    const { clearPDF:type } = types;\n\n    return { type }\n}","import React, { useRef } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { customStylespdf } from '../../helpers/modal';\nimport i_redux from '../../intefaces/reduxInterface';\nimport PDFObject from 'pdfobject';\nimport { clearPdf } from '../../actions/pdf';\n\nconst ModalPDF = () => {\n\n    const refdiv = useRef<any>()\n\n    const dispatch = useDispatch();\n\n    const { openModal, urlString } = useSelector((info:i_redux) => info.pdf);\n\n    const closeModal = () => {\n        dispatch(clearPdf());\n    }\n\n    const afterOpenModal = () => {\n        const input = refdiv.current as HTMLDivElement;\n        urlString && PDFObject.embed(urlString,input, {\n            width: \"85vw\",\n            height: \"85vh\"\n        })\n    }\n\n    return <>\n        <Modal\n            isOpen={ openModal }\n            ariaHideApp={ false }\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStylespdf}\n            contentLabel=\"Reporte pdf\"\n        >\n            <div ref={refdiv}></div>\n        </Modal>\n    </>\n}\n\nexport default ModalPDF;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i_redux from '../../../intefaces/reduxInterface';\nimport { i_student } from '../../../intefaces/studentInterface';\nimport jsPDF from 'jspdf';\nimport { startingSetPdf } from '../../../actions/pdf';\nimport autoTable from 'jspdf-autotable'\nimport ModalPDF from '../../ui/reporte';\nimport { setActiveStudent } from '../../../actions/students';\nimport { Link } from 'react-router-dom';\n\nconst ListStudents = () => {\n\n    const dispatch = useDispatch();\n\n    const { students } = useSelector( (info:i_redux) => info.student )\n\n    const handlePrint = async () => {\n      \n        const doc = new jsPDF()\n        doc.setProperties({ title: 'reporteEstudiante' })\n        doc.text('Reporte de estudiantes',14,10,{\n            align: 'justify'\n        })\n        autoTable(doc, { \n            head: [['Nombre',\n                'Apellido', \n                'Cedula',\n                'Semestre',\n                'Ciudad',\n                'Facultad'                \n            ]],\n            body: students?.map((student:i_student) => [\n                student.nombre_estudiante,\n                student.apellido_estudiante,\n                student.cedula_estudiante,\n                student.semestre.nombre,\n                student.ciudad.nombre,\n                student.facultade.nombre\n            ])\n        })\n        \n        const urlString = doc.output('datauristring');\n        dispatch(startingSetPdf( urlString ))     \n    }\n\n    const handleSearch = (student:i_student) => {\n        dispatch(setActiveStudent(student))\n    }\n\n   \n    return <>\n        <button className=\"btn btn-info\" onClick={ handlePrint }>Descargar Listado en PDF</button>\n        <table id='mytable' className=\"table table-striped table-hover table-sm \"> \n            <thead>\n                <tr>\n                    <th>Nombre</th>\n                    <th>Apellido</th>\n                    <th>Cedula</th>\n                    <th>Semestre</th>\n                    <th>Ciudad</th>\n                    <th>Facultad</th>\n                    <th>Opcion: Busqueda</th>\n                </tr>\n            </thead>\n            <tbody>\n                { students?.map((student:i_student) => <tr key={ student.cedula_estudiante }>\n                    \n                    <td>{student.nombre_estudiante}</td>\n                    <td>{student.apellido_estudiante}</td>\n                    <td>{student.cedula_estudiante}</td>\n                    <td>{student.semestre.nombre}</td>\n                    <td>{student.ciudad.nombre}</td>\n                    <td>{student.facultade.nombre}</td>\n                    <td><Link \n                        onClick={ () => handleSearch(student) }\n                        style={{ cursor: 'pointer', textDecoration: 'none' }}\n                        className='fa fa-search'\n                        to='/students/student'\n                    ></Link></td>\n                </tr>)}\n            </tbody>\n        </table>  \n\n        <ModalPDF/>\n    </>\n\n}\n\n\nexport default ListStudents;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoadingStudents } from '../../../actions/students';\nimport { startLoading } from '../../../actions/ui';\nimport i_redux from '../../../intefaces/reduxInterface';\nimport Loading from '../../ui/loading';\nimport ListStudents from './list';\n\nconst Students = () => {\n    const dispatch = useDispatch();\n    const { loading } = useSelector((info: i_redux) => info.ui);\n\n    useEffect(() => {\n        dispatch(startLoadingStudents())\n        dispatch(startLoading());\n    }, [dispatch])\n\n    return <>\n        {\n            loading\n                ? <Loading type='spin' color='#48f542' />\n                : <div>\n                    <h3 className=\"text-center\">Lista de Estudiantes</h3>\n                    <hr className=\"my-3\" />\n                    <ListStudents />\n\n                </div>\n        }\n    </>\n}\n\nexport default Students;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport i_redux from '../../../intefaces/reduxInterface';\nimport { schedule, commentary, i_student } from '../../../intefaces/studentInterface';\n\nconst Student = () => {\n\n    const { active } = useSelector((info: i_redux) => info.student);\n    const { comentarios } = active as i_student;\n    const { horarios } = active as i_student;\n\n\n    console.log(horarios)\n\n    return <>\n        <h3 className=\"text-center\">Datos Completos del Estudiante</h3>\n        <hr className=\"my-3\" />\n        <div className=\"container\">\n            <div className=\"row row-cols-2\">\n                <div className=\"col-2\"> <strong>Cedula Estudiante:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.cedula_estudiante, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Nombre Estudiante:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.nombre_estudiante, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Apellido Estudiante:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.apellido_estudiante, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Celular Estudiante:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.celular_estudiante, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Email Estudiante:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.email_estudiante, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Ciudad:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.ciudad.nombre, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Facultad:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.facultade.nombre, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"><strong> Semestre:</strong></div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.semestre.nombre, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Modalidad de Estudio:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        <pre>{JSON.stringify(active?.modalidad.nombre, null, 4)}</pre>\n                    }\n                    <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"> <strong>Calificacion del Servicio:</strong> </div>\n                <div className=\"col-10\">\n                    {\n                        (comentarios && comentarios.length > 1)\n                            ? comentarios.map((comentario: commentary, key: number) =>\n                                <pre key={key}>{JSON.stringify(comentario.gradosatisfacion, null, 4)}</pre>)\n                            : <div>No Existe Datos </div>\n                    }\n                  <hr className=\"my-1\" />\n                </div>\n                <div className=\"col-2\"><strong>Horario</strong> </div>\n                <table className=\"table table-bordered \">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Dia de la Semana</th>\n                            <th scope=\"col\">Hora de Entrada</th>\n                            <th scope=\"col\">Hora de Salida</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td >\n                                {\n                                    (horarios && horarios.length > 1)\n                                        ? horarios.map((hora: schedule, key: number) =>\n                                            <pre key={key}>{JSON.stringify(hora.nombredia, null, 4)}</pre>)\n                                        : <div>no existe datos </div>\n                                }\n                            </td>\n                            <td>\n                                {\n                                    (horarios && horarios.length > 1)\n                                        ? horarios.map((hora: schedule, key: number) =>\n                                            <pre key={key}>{JSON.stringify(hora.horaentrata, null, 4)}</pre>)\n                                        : <div>no existe datos </div>\n                                }\n                              \n                            </td>\n                            <td>\n                                {\n                                    (horarios && horarios.length > 1)\n                                        ? horarios.map((hora: schedule, key: number) =>\n                                            <pre key={key}>{JSON.stringify(hora.horasalida, null, 4)}</pre>)\n                                        : <div>no existe datos </div>\n                                }\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        {/*         {\n\n            <pre>{JSON.stringify(active, null, 4)}</pre>\n        } */}\n\n    </>\n}\n\nexport default Student;","import { Route,Switch,Redirect, useRouteMatch } from 'react-router-dom';\nimport ListStudents from '../../components/pages/students/index';\nimport Student from '../../components/pages/students/student';\n\n\n\nconst Students = () => {\n    const { url } = useRouteMatch();\n\n    return <Switch>\n        <Route\n            path={`${url}/list`}\n            exact={true}\n            component={ ListStudents }\n        />    \n        <Route\n            path={`${url}/student`}\n            exact={true}\n            component={ Student }\n        />\n\n        <Redirect to='/'/>\n    </Switch>\n}\n\n\nexport default Students;","import { i_error_action as i_action } from '../intefaces/errorInterface';\nimport types from '../types';\n\nexport const setError = ( msg:string ):i_action => {\n    const { setError } = types;\n\n    return {\n        type: setError,\n        payload:{\n            err: msg\n        }\n    };\n}\n\nexport const delErrorMsg = ():i_action => {\n    const { delError } = types;\n\n    return {\n        type: delError,\n        payload: { } \n    }\n}","import { fetchWithToken } from \"../helpers/fetch\";\nimport { i_h_action,i_horarios, i_h_consulta } from \"../intefaces/horariosInteface\";\nimport types from \"../types\";\nimport { stopLoading } from \"./ui\";\n\n\nexport const startingGetHorarios = ( data:i_h_consulta ) => async ( callback:Function ) => {\n    const resp = await fetchWithToken({url: '/consultahorarios', method: 'POST', data});\n    const dataResp = await resp.json();\n    const horarios = dataResp.horariosAll;\n\n    callback( getHorarios(horarios) );\n    callback( stopLoading() );\n}\n\nexport const getHorarios =  ( horarios:Array<i_horarios> ):i_h_action => {\n    const { getAfluenciaStudent:type } = types;\n    return {\n        type,\n        payload: {\n            horarios\n        }\n    }\n}\n\nexport const clearHorarios = () => {\n    const { clearAfluenciaStudent:type } = types;\n    return {\n        type\n    }\n}","import { i_auth_action as i_action } from '../intefaces/authInterface';\nimport { i_login } from '../intefaces/loginInterface';\nimport { fetchWithoutToken } from '../helpers/fetch';\nimport { decode } from 'jsonwebtoken';\nimport types from '../types';\nimport { delErrorMsg, setError } from './errors';\nimport { stopLoading } from './ui';\nimport { clearStudents } from './students';\nimport { clearPdf } from './pdf';\nimport { clearDriver } from './drivers';\nimport { clearHorarios } from './horarios';\n\ninterface respDecode {\n    [key: string]: any;\n}\n\nexport const startLogin = ( data:i_login ) => {\n    return async ( callback:Function ) => {\n        const resp = await fetchWithoutToken({url:'/admin',method:'POST',data});\n        const respJson = await resp.json();\n\n        \n        if( respJson.token ){\n            localStorage.setItem('token', respJson.token)\n            const { id:uid } = decode(respJson.token) as respDecode;\n            callback( login( uid ) );\n            callback( delErrorMsg() );\n            \n        } else {\n            callback( setError(respJson.message) );\n        }\n\n        callback( stopLoading() );\n    }\n}\n\nexport const login = ( uid:string ):i_action => {\n    const { login:type } = types;\n\n    return { \n        type,\n        payload: { uid }\n    }\n}\n\n\nexport const startLogout = () =>  ( callback:Function ) => {\n    localStorage.clear();\n    callback( stopLoading() );\n    callback( logout() );\n    callback( clearStudents() );\n    callback( clearPdf() );\n    callback( clearDriver() );\n    callback( clearHorarios() );\n}\n\n\nexport const logout = ():i_action => {\n    const { logout:type } = types;\n    return { type }\n}\n\n\nexport const startChecking = () => {\n    return (callback:Function) => {\n        const token = localStorage.getItem('token');\n        if( token ){\n            const { id:uid } = decode(token) as respDecode;\n            callback(login(uid));\n        }else {\n            callback(logout());\n        }\n        callback(finishCheking());\n    }\n}\n\nexport const finishCheking = ():i_action => {\n    const { checking:type } = types;\n\n    return { type }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Nav = () => {\n\n    const dispatch = useDispatch();\n\n    const handleLogout = () => dispatch(startLogout());\n\n    return <nav>\n\n<div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n              Pagina Principal\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarNav\"\n              aria-controls=\"navbarNav\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to='/students/list'>\n                    Lista General de Estudiantes y Busqueda\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to='/drivers'>\n                    Autorizar Cuentas Conductores\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\"  to='/afluencia'>\n                    Afluencia de Estudiantes\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                <button className=\"btn btn-info\" onClick={ handleLogout }>Cerrar Sesion</button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n\n{/*         <Link to='/'>Dashboard</Link>\n        <Link to='/students/list'>Estudiantes</Link>\n        <Link to='/drivers'>Conductores</Link>\n        <Link to='/afluencia'>Afluencia</Link>\n        <button onClick={ handleLogout }>Logout</button> */}\n    </nav>\n}\n\nexport default Nav;","import React, { useState } from 'react';\nimport useForm from '../../../hooks/useForm';\nimport { i_horarios, i_h_consulta } from '../../../intefaces/horariosInteface';\nimport moment from 'moment';\nimport TimeKeeper from 'react-timekeeper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startingGetHorarios } from '../../../actions/horarios';\nimport i_redux from '../../../intefaces/reduxInterface';\nimport Loading from '../../ui/loading';\nimport { startLoading } from '../../../actions/ui';\n\n\nconst Afluencia = () => {\n\n    const date = moment().hour(0).minute(0).second(0);\n\n    const dispatch = useDispatch();\n    const { horarios: { horarios }, ui: { loading } } = useSelector((info: i_redux) => info);\n    console.log(horarios)\n\n\n    const init: i_h_consulta = {\n        nombredia: 'Lunes',\n        horaentrada: date.format('H:mm'),\n        horadalida: date.hour(5).format('H:mm'),\n    }\n\n    const [showTimeStart, setShowTimeStart] = useState(false);\n    const [showTimeEnd, setShowTimeEnd] = useState(false);\n\n    const [horaentrada, setHoraEntrada] = useState(init.horaentrada);\n    const [horadalida, setHoraSalida] = useState(init.horadalida);\n\n    const [values, handleInputChange] = useForm(init);\n    const { nombredia } = values;\n\n    const dias = ['Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado', 'Domingo'];\n\n    const handleSubmit = (e: Event) => {\n        e.preventDefault();\n\n        values.horaentrada = horaentrada;\n        values.horadalida = horadalida;\n        dispatch(startingGetHorarios(values));\n        dispatch(startLoading());\n    }\n\n    return <>\n        <form onSubmit={handleSubmit as any}>\n            <div className='mb-3'>\n                <h3 className=\"text-center\">Afluencia</h3>\n                <h5 className=\"\">Seleccione los filtros</h5>\n                <hr className=\"my-3\" />\n                <h6>Dia de la semana:</h6>\n                <select className=\"form-select form-select-lg mb-2\" aria-label=\".form-select-lg example\" name='nombredia' value={nombredia} onChange={handleInputChange}>\n                    {\n                        dias.map((dia: any) => (\n                            <option key={dia} value={dia}> {dia}</option>\n                        ))\n                    }\n                </select>\n            </div>\n            <div className='mb-3'>\n                <button type='button' className=\"btn btn-outline-secondary btn-lg\" onClick={() => setShowTimeStart(!showTimeStart)}>Hora Entrada</button>\n                {\n                    showTimeStart && <TimeKeeper\n                        time={horaentrada}\n                        onChange={(newTime) => setHoraEntrada(newTime.formatted24)}\n                        hour24Mode={true}\n                    />\n                }\n            </div>\n            <div className='mb-3'>\n                <button type='button' className=\"btn btn-outline-secondary btn-lg\" onClick={() => setShowTimeEnd(!showTimeEnd)}>Hora Salida</button>\n                {\n                    showTimeEnd && <TimeKeeper\n                        time={horadalida}\n                        onChange={(newTime) => setHoraSalida(newTime.formatted24)}\n                        hour24Mode={true}\n                    />\n                }\n            </div>\n            <button type=\"submit\" className=\"btn btn-warning btn-lg\">Consultar</button>\n        </form>\n        <br /><br />\n\n\n\n        <div className=\"col-2\"><strong>Listado</strong> </div>\n        <table className=\"table table-bordered \">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Cedula Estudiante</th>\n                    <th scope=\"col\">Dia de la Semana</th>\n                    <th scope=\"col\">Hora de Entrada</th>\n                    <th scope=\"col\">Hora de Salida</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td >\n                        {\n                            (horarios && horarios.length > 1)\n                                ? horarios.map((hora: i_horarios, key: number) =>\n                                    <pre key={key}>{JSON.stringify(hora.cedula_estudiante, null, 4)}</pre>)\n                                : <div>No Existe Datos </div>\n                        }\n\n                    </td>\n                    <td>\n                        {\n                            (horarios && horarios.length > 1)\n                                ? horarios.map((hora: i_horarios, key: number) =>\n                                    <pre key={key}>{JSON.stringify(hora.nombredia, null, 4)}</pre>)\n                                : <div>No Existe Datos </div>\n                        }\n\n                    </td>\n                    <td>\n                        {\n                            (horarios && horarios.length > 1)\n                                ? horarios.map((hora: i_horarios, key: number) =>\n                                    <pre key={key}>{JSON.stringify(hora.horaentrata, null, 4)}</pre>)\n                                : <div>No Existe Datos </div>\n                        }\n\n                    </td>\n                    <td>\n                        {\n                            (horarios && horarios.length > 1)\n                                ? horarios.map((hora: i_horarios, key: number) =>\n                                    <pre key={key}>{JSON.stringify(hora.horasalida, null, 4)}</pre>)\n                                : <div>No Existe Datos </div>\n                        }\n\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        {/*         {\n            loading\n                ? <Loading type='spin' color='#48f542' />\n                : <pre>{JSON.stringify(horarios, null, 4)}</pre>\n\n        } */}\n\n\n\n\n\n\n    </>\n}\n\n\nexport default Afluencia;","import { Redirect, Route,Switch } from 'react-router-dom';\nimport DashboardScreen from '../../components/pages/dashboard/dashboardScreen';\nimport Drivers from '../../components/pages/drivers';\nimport Students from './students';\nimport Nav from '../../components/ui/navbar';\nimport Horarios from '../../components/pages/horarios/HoraioScreen';\n\n\nconst DashboardRoutes = () => <div>\n    <Nav/>\n    <Switch>\n        <Route\n            path='/'\n            exact={ true }\n            component={ DashboardScreen }\n        />\n        <Route\n            path='/students'\n            exact={ false }\n            component={ Students }\n        />\n        <Route\n            path='/drivers'\n            exact={ true }\n            component={ Drivers }\n        />\n        <Route\n            path='/afluencia'\n            exact={ true }\n            component={ Horarios }\n        />\n        <Redirect to='/'/>\n    </Switch>\n</div>\n\nexport default DashboardRoutes;","import React, { FormEvent } from 'react';\nimport useForm from '../../hooks/useForm';\nimport { i_login } from '../../intefaces/loginInterface';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { startLogin } from '../../actions/auth';\nimport i_redux from '../../intefaces/reduxInterface';\nimport { startLoading } from '../../actions/ui';\nimport Loading from '../ui/loading';\n\n\n\nconst init:i_login = {\n    email: '',\n    password: ''\n}\n\nconst LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector((info:i_redux) => info.ui);\n\n    const [ values,onChangeInput ] = useForm(init);\n    const { email, password }:i_login = values;\n\n    const onSubmit = ( e:FormEvent ) => {\n        e.preventDefault();\n        dispatch(startLoading())\n        dispatch(startLogin({email,password}));\n    }\n\n    const { err } = useSelector((info:i_redux) => info.err);\n\n    return <>\n        {\n            loading \n            ? <Loading type='spin' color='#48f542'/>\n            : <div className=\"App container\">\n                <div className=\"col-md-6\">\n                    <h1 className=\"font-weight-bold  text-center p-3 mb-2 bg-danger text-white\">Universidad Técnica Del Norte</h1>\n                    <hr className=\"my-3\" />\n                    <h1 className=\"text-center \">Grupo de Transporte UTN</h1>\n                    <hr className=\"my-3\" />\n                    { err && <p className=\"text-center\">{ err } </p> }\n                    \n                    <form onSubmit={ onSubmit }>\n                        <div>\n                            <label \n                                htmlFor=\"email-id\"\n                                className=\"form-label\"\n                                >Email\n                            </label>\n                            <input \n                                id=\"email-id\"\n                                className=\"form-control\"\n                                type=\"text\" \n                                name='email'\n                                placeholder=\"Ingrese su email\"\n                                onChange={ onChangeInput }\n                                value={ email }\n                            />\n                        </div>\n                        <div>\n                            <label \n                                htmlFor=\"password-id\"\n                                className=\"form-label\"\n                                >Contraseña\n                            </label>\n                            <input \n                                id=\"password-id\"\n                                className=\"form-control\"\n                                type=\"password\" \n                                name='password'\n                                placeholder=\"Ingrese su contraseña\"\n                                onChange={ onChangeInput }\n                                value={ password }\n                            />\n                        </div>\n                        <hr className=\"my-3\" />\n                        <button\n                            type='submit' \n                            className=\"btn btn-primary btn-lg btn-block\" \n                            >Iniciar Sesion\n                        </button>\n                    </form>\n                </div>\n            </div>\n        }\n    </>\n};\n\n\nexport default LoginScreen;","import { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { PrivateRouter, PublicRouter } from './authorization';\n\n// componentes \n\nimport DashboardRoutes from './dashboard/dashboard';\nimport LoginScreen from '../components/auth/loginScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i_redux from '../intefaces/reduxInterface';\nimport { startChecking } from '../actions/auth';\nimport Loading from '../components/ui/loading';\n\n\nconst Routes = () => {\n\n    const { uid,check } = useSelector((info:i_redux) => info.auth);\n    const auth = !!uid;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch( startChecking() )\n    },[ dispatch ])\n\n    if( check ) {\n        return <Loading type='spin' color='#48f542'/>\n    }\n\n    return (\n        <Router>\n            <Switch>\n                <PublicRouter \n                    isAuth={ auth }\n                    path='/login'\n                    exact={ true }\n                    Component={ LoginScreen }\n                />\n\n                <PrivateRouter\n                    isAuth={ auth }\n                    path='/'\n                    exact={ false }\n                    Component={ DashboardRoutes }\n                />\n            </Switch>\n        </Router>\n    )\n}\n\n\nexport default Routes;","import { i_auth_action as i_action, i_auth_state as i_state } from '../intefaces/authInterface';\nimport types from '../types';\n\nconst init:i_state = {\n    uid: '',\n    check: undefined\n}\n\nconst authReducer = (state = init,action:i_action):i_state => {\n\n    const { login,logout,checking } = types;\n\n    switch( action.type ){\n        case login: \n            if( action.payload ) {\n                state = {\n                    ...state,\n                    uid: action.payload.uid\n                }\n            }\n            break;\n        case checking:\n            state = {\n                ...state,\n                check: false\n            }\n            \n            break;\n        case logout:\n            state = init;\n            break;\n    }\n\n    return state;\n}\n\n\nexport default authReducer;","import { i_error_action as i_action, i_error_state as i_state } from '../intefaces/errorInterface';\nimport types from '../types';\n\nconst init:i_state = {\n    err: undefined\n}\n\nconst errorReducer = (state = init, action:i_action):i_state => {\n    const { setError,delError } = types;\n    switch( action.type ){\n        case setError:\n            state = {\n                ...state,\n                err: action.payload.err\n            }\n            break;\n        case delError:\n            state = init;\n            break;\n    }\n    return state;\n}\n\n\nexport default errorReducer;","import { i_ui_action as i_action, i_ui_state as i_state } from '../intefaces/uiInterface';\nimport types from '../types';\n\nconst init:i_state = {\n    loading: undefined\n}\n\nconst uiReducer = ( state = init, action: i_action ):i_state => {\n    const { startLoading, stopLoading } = types;\n\n    switch( action.type ){\n        case startLoading:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case stopLoading:\n            state = init;\n            break;\n    }\n\n\n    return state;\n}\n\nexport default uiReducer;","import type from '../types';\nimport { i_student_state as i_state, i_student_action as i_action } from '../intefaces/studentInterface';\n\n\nconst init:i_state = { }\n\n\nconst studentReducer = (state = init, action:i_action):i_state => {\n    const { loadStudents, setActiveStudent,clearStudents } = type;\n\n    switch( action.type ){\n        case loadStudents:\n            state = {\n                ...state,\n                students: action.payload.students\n            }\n            break;\n        case setActiveStudent:\n            state = {\n                ...state,\n                ...action.payload\n            }\n            break;\n        case clearStudents:\n            state = init;\n            break;\n    }\n    return state;\n}\n\n\nexport default studentReducer;","import { i_pdf_state as i_state, i_pdf_action as i_action } from \"../intefaces/pdfInterface\";\nimport types from \"../types\";\n\n\nconst init:i_state = { openModal: false }\n\nconst pdfReducer = (state = init, action:i_action):i_state => {\n    const { setPDF,clearPDF } = types;\n    switch( action.type ){\n        case setPDF:\n            state = {\n                ...state,\n                ...action.payload\n            }\n            break;\n        case clearPDF:\n            state = init;\n    }\n    return state;\n}\n\n\nexport default pdfReducer;","import types from \"../types\";\nimport { i_driver, i_driver_action as i_action, i_driver_state as i_state } from '../intefaces/driverInterface';\n\n\nconst init:i_state = { openModal:false }\n\nconst driverReducer = (state = init, action:i_action):i_state => {\n    const { loadDrivers, setActiveDriver, clearDrivers,openModalDrivers,clseModalDrivers,clearActiveDriver,\n        updateDriver,deleteDriver,addDriver\n    } = types;\n    \n    switch( action.type ){\n        case loadDrivers:\n\n            state = {\n                ...state,\n                ...action.payload\n            }\n            break;\n        case setActiveDriver:\n            state = {\n                ...state,\n                ...action.payload\n            }\n            break;\n        case openModalDrivers:\n            state = {\n                ...state,\n                openModal: true\n            }\n            break;\n        case clseModalDrivers:\n            state = {\n                ...state,\n                openModal: false\n            }\n            break;\n        case clearActiveDriver:\n            state = {\n                ...state,\n                active: undefined\n            }\n            break;\n        case updateDriver:\n            state = {\n                ...state,\n                drivers: state.drivers?.map((driver:i_driver) => {\n                    const update =  action.payload?.update;\n                    if( update && (update.cedula_conductor === driver.cedula_conductor) ) {\n                        return update;\n                    }else {\n                        return driver;\n                    }\n                })\n            }\n            break;\n        case deleteDriver: \n            state = {\n                ...state,\n                drivers: state.drivers?.filter((driver:i_driver) => \n                    action.payload?.update?.cedula_conductor !== driver.cedula_conductor\n                )\n            }\n            break;\n        case addDriver:\n            state = {\n                ...state,\n                ...action.payload?.update\n            }\n            break;\n        case clearDrivers:\n            state = init;\n            break;\n    }\n\n    return state;\n}\n\n\nexport default driverReducer;","import { i_h_state,i_h_action } from \"../intefaces/horariosInteface\";\nimport types from \"../types\";\n\n\nconst init:i_h_state = { }\n\n\nconst afluenciaReducer = ( state = init, action:i_h_action ):i_h_state => {\n\n    const { getAfluenciaStudent,clearAfluenciaStudent } = types;\n    const { type,payload } = action;\n\n    switch( type ){\n        case getAfluenciaStudent:\n            state = {\n                ...state,\n                horarios: payload?.horarios\n            }\n            break;\n        case clearAfluenciaStudent:\n            state = init;\n            break;\n    }\n    return state;\n}\n\n\nexport default afluenciaReducer;","import { createStore, combineReducers, compose,applyMiddleware } from 'redux';\nimport authReducer from '../reducers/authReducer';\nimport errorReducer from '../reducers/errorReducer';\nimport uiReducer from '../reducers/uiReducer';\nimport thunk from 'redux-thunk';\nimport studentReducer from '../reducers/studentsReducer';\nimport pdfReducer from '../reducers/pdfReducer';\nimport driverReducer from '../reducers/driverReducer';\nimport afluenciaReducer from '../reducers/afluenciaReducer';\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    err: errorReducer,\n    ui: uiReducer,\n    student: studentReducer,\n    pdf: pdfReducer,\n    drivers: driverReducer,\n    horarios: afluenciaReducer\n});\n\nconst Store = createStore( \n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\nexport default Store;","import React from 'react';\nimport Routes from './routes/index';\nimport { Provider } from 'react-redux';\nimport Store from './store';\nimport './styles/app.css';\n\nconst App = () => <Provider store={ Store }>\n    <Routes/>\n</Provider>\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app/app';\n\nconst root = document.getElementById('root');\n\nrender(<App/>, root);"],"sourceRoot":""}